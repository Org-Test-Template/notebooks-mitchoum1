---
name: Notebooks Release
on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag for the notebooks release'
        required: true
        default: 'v1.30.0'
      release_name:
        description: 'Name of the release'
        required: true
        default: '2025a'
      source_branch:
        description: 'Source branch for the release'
        required: true
        default: 'test'
      target_branch:
        description: 'Target branch for the release'
        required: true
        default: 'tmp-digest-sync-14488482962'

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  RELEASE_TAG: ${{ github.event.inputs.tag }}
  RELEASE_NAME: ${{ github.event.inputs.release_name }}
  SOURCE_BRANCH: ${{ github.event.inputs.source_branch }}
  TARGET_BRANCH: ${{ github.event.inputs.target_branch }}

jobs:
  create-pull-request:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Create Source Branch
        run: |
          git checkout -b ${{ SOURCE_BRANCH}}
          git push origin ${{ SOURCE_BRANCH}}
      
      - name: create pull request
        run: gh pr create -B ${{ SOURCE_BRANCH}} -H ${{ TARGET_BRANCH }} --title 'Merge branch_to_merge into base_branch' --body 'Created by Github action'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

pull_request:
    branches:
      - test
    types: [closed]

env:
  RELEASE_TAG: "v1.0.0"

permissions:
  contents: write

jobs:
  release:
    name: Release Notebooks
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && contains(github.event.pull_request.head.ref, 'tmp-digest-sync-')
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Invoke Script to handle creating a release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        working-directory: ${{env.GITHUB_WORKSPACE}}
        run: |
          gh release create "${{env.RELEASE_TAG}}" --generate-notes

