---
name: Notebooks Release
on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag for the notebooks release'
        required: true
        default: 'v1.32.0'
      release_name:
        description: 'Name of the release'
        required: true
        default: '2025a'
      head_branch:
        description: 'head branch for the release'
        required: true
        default: 'tmp-digest-sync-14488482962'
      base_branch:
        description: 'Base branch for the release'
        required: true
        default: 'test'

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  RELEASE_TAG: ${{ github.event.inputs.tag }}
  RELEASE_NAME: ${{ github.event.inputs.release_name }}
  BASE_BRANCH: ${{ github.event.inputs.base_branch }}
  HEAD_BRANCH: ${{ github.event.inputs.head_branch }}
  REPO_OWNER: mtchoum1
  REPO_NAME: notebooks

jobs:
  Update the manifests directory:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Configure Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "github-actions[bot]@users.noreply.github.com"
      
      - name: Create Target Branch
        run: |
          git checkout -b $BASE_BRANCH
          git push origin $BASE_BRANCH
      
      - name: create pull request
        run: |
          gh pr create -B $BASE_BRANCH -H $HEAD_BRANCH --title "$PR_TITLE" --body "$PR_BODY"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_TITLE: "[Updater Action] Update Notebook and Runtime Images as well as the Commits With New SHAs"
          PR_BODY: |
            :rocket: This is an automated Pull Request.
            Created by `/.github/workflows/notebooks-digest-updater.yaml`
            - `manifests/base/params.env` file with the latest updated SHA digests of the notebooks.
            - `manifests/base/runtime-*.yamls` file with the latest updated SHA digests of the runtimes.
            - `manifests/base/commit.env` file with the latest commit.
        
  Check manifests pr merged:
    needs: create-pull-request
    runs-on: ubuntu-latest
    outputs:
      pr_merged_m: ${{ steps.check_pr.outputs.pr_merged_m }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check if PR is merged
        id: check_pr
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # PR to look for
          PR_TITLE="[Updater Action] Update Notebook and Runtime Images as well as the Commits With New SHAs"

          #Fetch matching PRs
          PR_NUMBER=$(gh pr list --repo "$REPO_OWNER/$REPO_NAME" --state all --search "$PR_TITLE" --json number,title | jq -r '.[0].number')
          echo "PR Numbers: $PR_NUMBER"

          if [ -z "$PR_NUMBER" ]; then
            echo "No PR found with title: $PR_TITLE"
            exit 1
          fi

          MAX_ATTEMPTS=30
          SLEEP_DURATION=600

          for (( i=1; i<=MAX_ATTEMPTS; i++ )); do
            echo "Checking if PR #$PR_NUMBER is merged (Attempt $i/$MAX_ATTEMPTS)..."
            PR_STATE=$(gh pr view --repo "$REPO_OWNER/$REPO_NAME" $PR_NUMBER --json mergedAt --jq '.mergedAt')

            if [ "$PR_STATE" = "null" ] || [ -z "$PR_STATE" ]; then
              echo "PR #$PR_NUMBER is not merged yet. Waiting..."
              sleep $SLEEP_DURATION
            else
              echo "PR #$PR_NUMBER is merged!"
              echo "pr_merged_m=true" >> $GITHUB_ENV
              echo "pr_merged_m=true" >> $GITHUB_OUTPUT
              exit 0
            fi
          done

          echo "Timed out waiting for PR #$PR_NUMBER to be merged."
          echo "pr_merged_m=false" >> $GITHUB_ENV
          echo "pr_merged_m=false" >> $GITHUB_OUTPUT
          exit 1
  
  Verify downstream BuidConfigs:
    needs: [Check manifests pr merged, Update the manifests directory]
    if: needs.check-pr-merged.outputs.pr_merged_m == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Invoke Script to handle verifying downstream BuildConfigs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        working-directory: ${{env.GITHUB_WORKSPACE}}
        run: |
          while IFS= read -r line; do
            echo "$line"
          done < ./manifests/base/rstudio-buildconfig.yaml

  Generate a new release:
    needs: [Check manifests pr merged, Update the manifests directory]
    if: needs.check-pr-merged.outputs.pr_merged_m == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Invoke Script to handle creating a release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        working-directory: ${{env.GITHUB_WORKSPACE}}
        run: |
          gh release create "$RELEASE_TAG" --title="$RELEASE_NAME-$RELEASE_TAG" --generate-notes --target $BASE_BRANCH
